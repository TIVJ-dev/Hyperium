--- original/net/minecraft/client/resources/ResourcePackRepository.java
+++ changed/net/minecraft/client/resources/ResourcePackRepository.java
@@ -1,5 +1,6 @@
 package net.minecraft.client.resources;
 
+import cc.hyperium.internal.addons.AddonMinecraftBootstrap;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.Lists;
 import com.google.common.hash.Hashing;
@@ -13,11 +14,7 @@
 import java.io.File;
 import java.io.FileFilter;
 import java.io.IOException;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
+import java.util.*;
 import java.util.concurrent.locks.ReentrantLock;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiScreenWorking;
@@ -57,7 +54,7 @@
     private final ReentrantLock lock = new ReentrantLock();
     private ListenableFuture<Object> downloadingPacks;
     private List<ResourcePackRepository.Entry> repositoryEntriesAll = Lists.<ResourcePackRepository.Entry>newArrayList();
-    private List<ResourcePackRepository.Entry> repositoryEntries = Lists.<ResourcePackRepository.Entry>newArrayList();
+    public List<ResourcePackRepository.Entry> repositoryEntries = Lists.<ResourcePackRepository.Entry>newArrayList();
 
     public ResourcePackRepository(File dirResourcepacksIn, File dirServerResourcepacksIn, IResourcePack rprDefaultResourcePackIn, IMetadataSerializer rprMetadataSerializerIn, GameSettings settings) {
         this.dirResourcepacks = dirResourcepacksIn;
@@ -96,7 +93,12 @@
     }
 
     private List<File> getResourcePackFiles() {
-        return this.dirResourcepacks.isDirectory() ? Arrays.asList(this.dirResourcepacks.listFiles(resourcePackFilter)) : Collections.<File>emptyList();
+        List<File> resourcepacks = new ArrayList<>(this.dirResourcepacks.isDirectory() ? Arrays.asList(this.dirResourcepacks.listFiles(resourcePackFilter)) : Collections.emptyList());
+        AddonMinecraftBootstrap.getLoadedAddons().forEach(addon -> {
+            File mcmeta = new File(addon.getClass().getResource("pack.mcmeta").getFile());
+            if (mcmeta.exists()) resourcepacks.add(mcmeta.getParentFile());
+        });
+        return resourcepacks;
     }
 
     public void updateRepositoryEntriesAll() {
@@ -211,6 +213,9 @@
      * Keep only the 10 most recent resources packs, delete the others
      */
     private void deleteOldServerResourcesPacks() {
+        if (!dirServerResourcepacks.exists())
+            dirServerResourcepacks.mkdirs();
+
         List<File> list = Lists.newArrayList(FileUtils.listFiles(this.dirServerResourcepacks, TrueFileFilter.TRUE, (IOFileFilter)null));
         Collections.sort(list, LastModifiedFileComparator.LASTMODIFIED_REVERSE);
         int i = 0;
